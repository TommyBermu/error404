-- ENUMS (sin cambios salvo el typo de jpg)
CREATE TYPE "user_role" AS ENUM ('colaborador','supervisor','analistaTH');
CREATE TYPE "user_status" AS ENUM ('active','inactive','pending');
CREATE TYPE "course_status" AS ENUM ('active','draft','archived');
CREATE TYPE "path_status"   AS ENUM ('active','draft','archived');
CREATE TYPE "course_ins_status" AS ENUM ('enrolled','in_progress','completed','failed','withdrawn');
CREATE TYPE "path_ins_status"   AS ENUM ('enrolled','in_progress','completed','withdrawn');
CREATE TYPE "content_type" AS ENUM ('exam','assignment','material');
CREATE TYPE "material_type" AS ENUM ('mp4','mp3','jpg','pdf','txt');

-- Tablas
CREATE TABLE "user" (
  "id" int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(100),
  "email" varchar(255) UNIQUE,
  "password_hash" varchar(255),
  "role" user_role,
  "status" user_status,
  "created_at" timestamptz DEFAULT now(),
  "updated_at" timestamptz DEFAULT now(),
  "last_login" timestamptz
);

CREATE TABLE "team" (
  "id" int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(100),
  "description" varchar(255),
  "supervisor" int,
  "created_at" timestamptz DEFAULT now(),
  "updated_at" timestamptz DEFAULT now(),
  CONSTRAINT fk_team_supervisor FOREIGN KEY ("supervisor") REFERENCES "user" ("id")
);

CREATE TABLE "team_user" (
  "id" int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user" int NOT NULL,
  "team" int NOT NULL,
  "assigned_at" timestamptz DEFAULT now(),
  "role_in_team" varchar(50),
  CONSTRAINT fk_tu_user FOREIGN KEY ("user") REFERENCES "user" ("id"),
  CONSTRAINT fk_tu_team FOREIGN KEY ("team") REFERENCES "team" ("id")
);

CREATE TABLE "course" (
  "id" int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(150),
  "description" text,
  "duration_hours" int,
  "created_at" timestamptz DEFAULT now(),
  "updated_at" timestamptz DEFAULT now(),
  "created_by" int,
  "header_img" bytea,
  "status" course_status,
  CONSTRAINT fk_course_creator FOREIGN KEY ("created_by") REFERENCES "user" ("id")
);

CREATE TABLE "learning_path" (
  "id" int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(150),
  "description" text,
  "estimated_duration" int,
  "created_at" timestamptz DEFAULT now(),
  "updated_at" timestamptz DEFAULT now(),
  "created_by" int,
  "header_img" bytea,
  "status" path_status,
  CONSTRAINT fk_lp_creator FOREIGN KEY ("created_by") REFERENCES "user" ("id")
);

CREATE TABLE "course_in_path" (
  "id" int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "learning_path" int NOT NULL,
  "course" int NOT NULL,
  "previous_course" int,
  "next_course" int,
  CONSTRAINT fk_cip_lp  FOREIGN KEY ("learning_path") REFERENCES "learning_path" ("id"),
  CONSTRAINT fk_cip_c   FOREIGN KEY ("course") REFERENCES "course" ("id"),
  CONSTRAINT fk_cip_pc  FOREIGN KEY ("previous_course") REFERENCES "course" ("id"),
  CONSTRAINT fk_cip_nc  FOREIGN KEY ("next_course") REFERENCES "course" ("id")
);

CREATE TABLE "course_inscription" (
  "id" int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user" int NOT NULL,
  "course" int NOT NULL,
  "enrollment_date" timestamptz,
  "completion_date" timestamptz,
  "progress" numeric(5,2) DEFAULT 0,
  "status" course_ins_status,
  CONSTRAINT fk_ci_user FOREIGN KEY ("user") REFERENCES "user" ("id"),
  CONSTRAINT fk_ci_course FOREIGN KEY ("course") REFERENCES "course" ("id")
);

CREATE TABLE "path_inscription" (
  "id" int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user" int NOT NULL,
  "learning_path" int NOT NULL,
  "enrollment_date" timestamptz,
  "completion_date" timestamptz,
  "progress" numeric(5,2) DEFAULT 0,
  "status" path_ins_status,
  CONSTRAINT fk_pi_user FOREIGN KEY ("user") REFERENCES "user" ("id"),
  CONSTRAINT fk_pi_lp FOREIGN KEY ("learning_path") REFERENCES "learning_path" ("id")
);

CREATE TABLE "module" (
  "id" int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "course" int NOT NULL,
  "name" varchar(150),
  "description" text,
  "previous_module" int,
  "next_module" int,
  "duration_hours" int,
  "created_at" timestamptz DEFAULT now(),
  "updated_at" timestamptz DEFAULT now(),
  CONSTRAINT fk_mod_course FOREIGN KEY ("course") REFERENCES "course" ("id"),
  CONSTRAINT fk_mod_prev   FOREIGN KEY ("previous_module") REFERENCES "module" ("id"),
  CONSTRAINT fk_mod_next   FOREIGN KEY ("next_module")  REFERENCES "module" ("id")
);

-- Modelo polimórfico corregido
CREATE TABLE "exam" (
  "id" int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "total_questions" int,
  "passing_score" int,
  "duration_minutes" int,
  "max_tries" int,
  "questions" json
);

CREATE TABLE "assignment" (
  "id" int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "type" material_type,
  "max_score" int,
  "due_date" timestamptz
);

CREATE TABLE "material" (
  "id" int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "type" material_type,
  "file" bytea
);

CREATE TABLE "content" (
  "id" int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "module" int NOT NULL,
  "title" varchar(150),
  "description" text,
  "content_type" content_type NOT NULL,
  -- relación polimórfica (solo una columna no nula)
  "exam_id" int,
  "assignment_id" int,
  "material_id" int,
  "previous_content" int,
  "next_content" int,
  "is_mandatory" boolean DEFAULT false,
  "created_at" timestamptz DEFAULT now(),
  "updated_at" timestamptz DEFAULT now(),
  CONSTRAINT fk_content_module  FOREIGN KEY ("module") REFERENCES "module" ("id"),
  CONSTRAINT fk_content_exam    FOREIGN KEY ("exam_id") REFERENCES "exam" ("id"),
  CONSTRAINT fk_content_assign  FOREIGN KEY ("assignment_id") REFERENCES "assignment" ("id"),
  CONSTRAINT fk_content_material FOREIGN KEY ("material_id") REFERENCES "material" ("id"),
  CONSTRAINT fk_content_prev    FOREIGN KEY ("previous_content") REFERENCES "content" ("id"),
  CONSTRAINT fk_content_next    FOREIGN KEY ("next_content") REFERENCES "content" ("id"),
  -- Asegura coherencia tipo-objeto
  CONSTRAINT chk_content_one_ref CHECK (
    (exam_id IS NOT NULL)::int +
    (assignment_id IS NOT NULL)::int +
    (material_id IS NOT NULL)::int = 1
  ),
  CONSTRAINT chk_content_type_matches CHECK (
    (content_type = 'exam'      AND exam_id IS NOT NULL) OR
    (content_type = 'assignment' AND assignment_id IS NOT NULL) OR
    (content_type = 'material'  AND material_id IS NOT NULL)
  )
);

CREATE TABLE "content_progress" (
  "id" int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "content" int NOT NULL,
  "course_inscription" int NOT NULL,
  "started_at" timestamptz,
  "completed_at" timestamptz,
  "score" int,
  "file" bytea,
  "results" json,
  "is_completed" boolean DEFAULT false,
  CONSTRAINT fk_cp_content FOREIGN KEY ("content") REFERENCES "content" ("id"),
  CONSTRAINT fk_cp_ci FOREIGN KEY ("course_inscription") REFERENCES "course_inscription" ("id")
);